# Generated by Django 5.0.3 on 2024-09-17 11:40

import django.core.validators
import project.models
import project.storage_backends
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('title', models.CharField(default='', help_text='Title for the reservation', max_length=100, verbose_name='Title')),
                ('date', models.DateField(verbose_name='Date')),
                ('start_time', models.TimeField(help_text='Start time of the reservation', verbose_name='Start time')),
                ('end_time', models.TimeField(help_text='End time of the reservation', verbose_name='End time')),
                ('assistants', models.IntegerField(default=1, help_text='Assistants for the reservation', null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Assistants')),
                ('is_paid', models.BooleanField(default=False, help_text='Is the reservation paid?', verbose_name='Is paid?')),
                ('catering', models.BooleanField(default=False, verbose_name='Do I need catering service?')),
                ('notes', models.CharField(default='', help_text='Notes for the reservation', max_length=500, verbose_name='Notes')),
                ('bloc4_reservation', models.BooleanField(default=False, verbose_name='Reservation for Bloc4 services')),
                ('privacy', models.CharField(choices=[('private', 'Private training'), ('public', 'Public training')], default='private', help_text='If the training is public, it will appear in the bloc4 agenda', max_length=20, verbose_name='privacy')),
                ('description', models.CharField(blank=True, help_text='Description for the reservation', max_length=500, verbose_name='Description')),
                ('poster', models.ImageField(blank=True, null=True, storage=project.storage_backends.PublicMediaStorage(), upload_to='', validators=[django.core.validators.validate_image_file_extension], verbose_name='Poster')),
                ('url', models.URLField(blank=True, default='', verbose_name='URL of the activity')),
                ('total_price', models.FloatField(default=0, help_text='Total price will be calculated on save.', validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Total price')),
                ('canceled_at', models.DateTimeField(blank=True, null=True, verbose_name='canceled_at')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('canceled', 'Canceled'), ('refused', 'Refused')], default='pending', help_text='Status of the reservation', max_length=20, verbose_name='status')),
            ],
            options={
                'verbose_name': 'reservation',
                'verbose_name_plural': 'reservations',
                'ordering': ['-date'],
            },
            bases=(project.models.SetBooleanDatetimeMixin, models.Model),
        ),
    ]
